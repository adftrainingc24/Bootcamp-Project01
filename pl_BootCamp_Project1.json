{
    "name": "pl_BootCamp_Project1",
    "properties": {
        "activities": [
            {
                "name": "Get Metadata of blob container",
                "type": "GetMetadata",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "ds_boot_camp_project01_blob",
                        "type": "DatasetReference"
                    },
                    "fieldList": [
                        "childItems"
                    ],
                    "storeSettings": {
                        "type": "AzureBlobStorageReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    },
                    "formatSettings": {
                        "type": "DelimitedTextReadSettings"
                    }
                }
            },
            {
                "name": "ForEach loop through Blob",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Get Metadata of blob container",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Get Metadata of blob container').output.childItems",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "Copy data from Blob to Bronze ADLS",
                            "type": "Copy",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "DelimitedTextSource",
                                    "storeSettings": {
                                        "type": "AzureBlobStorageReadSettings",
                                        "recursive": true,
                                        "wildcardFileName": "*",
                                        "enablePartitionDiscovery": false
                                    },
                                    "formatSettings": {
                                        "type": "DelimitedTextReadSettings"
                                    }
                                },
                                "sink": {
                                    "type": "DelimitedTextSink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    },
                                    "formatSettings": {
                                        "type": "DelimitedTextWriteSettings",
                                        "quoteAllText": true,
                                        "fileExtension": ".txt"
                                    }
                                },
                                "enableStaging": false,
                                "translator": {
                                    "type": "TabularTranslator",
                                    "typeConversion": true,
                                    "typeConversionSettings": {
                                        "allowDataTruncation": true,
                                        "treatBooleanAsNumber": false
                                    }
                                }
                            },
                            "inputs": [
                                {
                                    "referenceName": "ds_boot_camp_project01_blob",
                                    "type": "DatasetReference"
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ds_bootcamp_project01_adlsgen2",
                                    "type": "DatasetReference"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "Lookup the Sql Server db tables",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "ForEach loop through Blob",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SqlServerSource",
                        "sqlReaderQuery": "DECLARE @DatabaseName NVARCHAR(255) = 'BootCamp_Project1'; -- Set your database name here\nDECLARE @sql NVARCHAR(MAX) = '';\n\nIF @DatabaseName IS NOT NULL\nBEGIN\n    SET @sql = \n        'SELECT ''' + @DatabaseName + ''' AS DatabaseName, s.name AS SchemaName, t.name AS TableName \n        FROM ' + QUOTENAME(@DatabaseName) + '.sys.schemas s \n        JOIN ' + QUOTENAME(@DatabaseName) + '.sys.tables t \n        ON s.schema_id = t.schema_id';\n\n    EXEC sp_executesql @sql;\nEND\nELSE\nBEGIN\n    PRINT 'Please provide a valid database name.';\nEND\n",
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "ds_bootcamp_project01_sql_server",
                        "type": "DatasetReference",
                        "parameters": {
                            "dataset_dbname": {
                                "value": "@pipeline().parameters.db_name",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "ForEach to loop through db tables",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Lookup the Sql Server db tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Lookup the Sql Server db tables').output.value",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "Copy data from Sql server to Bronze",
                            "type": "Copy",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlServerSource",
                                    "sqlReaderQuery": {
                                        "value": "@{concat('SELECT * FROM ', item().SchemaName, '.', item().TableName)}",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "sink": {
                                    "type": "DelimitedTextSink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    },
                                    "formatSettings": {
                                        "type": "DelimitedTextWriteSettings",
                                        "quoteAllText": true,
                                        "fileExtension": ".csv"
                                    }
                                },
                                "enableStaging": false,
                                "translator": {
                                    "type": "TabularTranslator",
                                    "typeConversion": true,
                                    "typeConversionSettings": {
                                        "allowDataTruncation": true,
                                        "treatBooleanAsNumber": false
                                    }
                                }
                            },
                            "inputs": [
                                {
                                    "referenceName": "ds_bootcamp_project01_sql_server",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "dataset_dbname": {
                                            "value": "@pipeline().parameters.db_name",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ds_bootcamp_project01_sql_server_from_onprem",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "schemaname": "@item().SchemaName",
                                        "tablename": "@item().TableName"
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "ForEach API source",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "ForEach to loop through db tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@variables('apiEndpoints')\n",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "Copy data from API to Bronze",
                            "type": "Copy",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "RestSource",
                                    "httpRequestTimeout": "00:01:40",
                                    "requestInterval": "00.00:00:00.010",
                                    "requestMethod": "GET",
                                    "paginationRules": {
                                        "supportRFC5988": "true"
                                    }
                                },
                                "sink": {
                                    "type": "DelimitedTextSink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    },
                                    "formatSettings": {
                                        "type": "DelimitedTextWriteSettings",
                                        "quoteAllText": true,
                                        "fileExtension": ".csv"
                                    }
                                },
                                "enableStaging": false
                            },
                            "inputs": [
                                {
                                    "referenceName": "ds_RestResource_api",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "relativeURL": {
                                            "value": "@item()",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ds_bootcamp_project1_api_sink",
                                    "type": "DatasetReference"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "Data flow of Transformations",
                "type": "ExecuteDataFlow",
                "dependsOn": [
                    {
                        "activity": "ForEach API source",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataflow": {
                        "referenceName": "df_bootcamp_p1_transformations",
                        "type": "DataFlowReference"
                    },
                    "compute": {
                        "coreCount": 8,
                        "computeType": "General"
                    },
                    "traceLevel": "Fine"
                }
            }
        ],
        "parameters": {
            "db_name": {
                "type": "string"
            }
        },
        "variables": {
            "apiEndpoints": {
                "type": "Array",
                "defaultValue": [
                    "/customers",
                    "/products",
                    "/sales"
                ]
            }
        },
        "annotations": [],
        "lastPublishTime": "2025-03-21T22:19:30Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}